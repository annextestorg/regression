name: 'Trigger Functional Tests based on Environment'
on:
  workflow_dispatch:
    inputs:
      environment:
        # The environment where the Functional Tests need to be run
        description: 'environment - Allowed values are dev|tst|prd'
        required: true
        default: 'tst'
      module:
        description: 'module name, eg. plat-jdp-bulk-automation-e2e'
        required: true
        default: 'plat-jdp-bulk-automation-e2e'
      testGroup:
        description: 'test group - eg. smoke|regression|e2e|acceptance'
        required: true
        default: 'smoke'
      cisEnabled:
        # Common Ingestion service is enabled or not
        description: 'CIS enabled?, Allowed values are true|false'
        required: true
        default: 'false'

env:
  THEME_COLOR: 'dc3545'
  SECTIONS: '[{"activityImage":"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png","activityTitle":"Functional Tests ran on ${{ github.event.inputs.environment }}","activitySubtitle":"Tests triggered by ${{ github.actor }}","facts":[{"name":"Environment:","value":"${{ github.event.inputs.environment }}"},{"name":"Module Name:","value":"${{ github.event.inputs.module }}"},{"name":"Test Group:","value":"${{ github.event.inputs.testGroup }}"},{"name":"Status","value":"Failed"}]}]'
  ACTIONS: '[{ "targets": [{ "os": "default", "uri": "https://upgraded-garbanzo-6881fdcc.pages.github.io/${{ github.run_number }}" }], "@type": "OpenUri", "name": "Allure Report" }, { "targets": [{ "os": "default", "uri": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" }], "@type": "OpenUri", "name": "Go to workflow" }]'

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: 'BUILD - Checkout code'
        uses: 'actions/checkout@v2'
      - name: 'BUILD - Set up Java'
        uses: 'actions/setup-java@v1'
        with:
          java-version: '1.8'
      - name: 'Cache the build'
        uses: 'actions/cache@v2'
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 'Grant execute permission for run runFunctionalTests.sh script'
        run: chmod +x ./scripts/runFunctionalTests.sh

      - name: 'Run runFunctionalTests.sh Shell Script in Dev env'
        id: dev
        if: ${{ contains(github.event.inputs.environment, 'dev') }}
        run: ./scripts/runFunctionalTests.sh ${{ github.event.inputs.environment }} ${{ github.event.inputs.module }} ${{ github.event.inputs.testGroup }} '${{ secrets.ARTIFACTORYUSERNAME }}' '${{ secrets.ARTIFACTORYPASSWORD }}' '${{ secrets.SNOWFLAKE_USERNAME }}' '${{ secrets.SNOWFLAKE_PWD }}' '${{ secrets.BOOTSTRAP_SERVER_DEV }}' '${{ secrets.JAAS_CONFIG_DEV }}' ${{ github.event.inputs.cisEnabled }} '${{ secrets.AZURE_SAS_TOKEN_URL_DEV }}'

      - name: 'Run runFunctionalTests.sh Shell Script in Test env'
        id: tst
        if: ${{ contains(github.event.inputs.environment, 'tst') }}
        run: ./scripts/runFunctionalTests.sh ${{ github.event.inputs.environment }} ${{ github.event.inputs.module }} ${{ github.event.inputs.testGroup }} '${{ secrets.ARTIFACTORYUSERNAME }}' '${{ secrets.ARTIFACTORYPASSWORD }}' '${{ secrets.SNOWFLAKE_USERNAME }}' '${{ secrets.SNOWFLAKE_PWD }}' '${{ secrets.BOOTSTRAP_SERVER_TST }}' '${{ secrets.JAAS_CONFIG_TST }}' ${{ github.event.inputs.cisEnabled }} '${{ secrets.M2M_CLIENT_ID_TST }}' '${{ secrets.M2M_CLIENT_SECRET_TST }}'

      - name: 'Run runFunctionalTests.sh Shell Script in Prod env'
        id: prd
        if: ${{ contains(github.event.inputs.environment, 'prd') }}
        run: ./scripts/runFunctionalTests.sh ${{ github.event.inputs.environment }} ${{ github.event.inputs.module }} ${{ github.event.inputs.testGroup }} '${{ secrets.ARTIFACTORYUSERNAME }}' '${{ secrets.ARTIFACTORYPASSWORD }}' '${{ secrets.SNOWFLAKE_USERNAME_PRD }}' '${{ secrets.SNOWFLAKE_PWD_PRD }}' '${{ secrets.BOOTSTRAP_SERVER_PRD }}' '${{ secrets.JAAS_CONFIG_PRD }}' ${{ github.event.inputs.cisEnabled }} '${{ secrets.M2M_CLIENT_ID_PRD }}' '${{ secrets.M2M_CLIENT_SECRET_PRD }}'

      - name: 'Send MS Teams Notification when tests are passed'
        if: ${{ success() }}
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.TEAMS_WEBHOOK }}
          summary: MS Teams Notification
          theme_color: 28a745
          sections: '[{"activityImage":"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png","activityTitle":"Functional Tests ran on ${{ github.event.inputs.environment }}","activitySubtitle":"Tests triggered by ${{ github.actor }}","facts":[{"name":"Environment:","value":"${{ github.event.inputs.environment }}"},{"name":"Module Name:","value":"${{ github.event.inputs.module }}"},{"name":"Test Group:","value":"${{ github.event.inputs.testGroup }}"},{"name":"Status","value":"Passed"}]}]'
          actions: '[{ "targets": [{ "os": "default", "uri": "https://upgraded-garbanzo-6881fdcc.pages.github.io/${{ github.run_number }}" }], "@type": "OpenUri", "name": "Allure Report" }, { "targets": [{ "os": "default", "uri": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" }], "@type": "OpenUri", "name": "Go to workflow" }]'

      - name: 'Send MS Teams Notification when tests are failed'
        if: ${{ failure() }}
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.TEAMS_WEBHOOK }}
          summary: MS Teams Notification
          theme_color: dc3545
          sections: '[{"activityImage":"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png","activityTitle":"Functional Tests ran on ${{ github.event.inputs.environment }}","activitySubtitle":"Tests triggered by ${{ github.actor }}","facts":[{"name":"Environment:","value":"${{ github.event.inputs.environment }}"},{"name":"Module Name:","value":"${{ github.event.inputs.module }}"},{"name":"Test Group:","value":"${{ github.event.inputs.testGroup }}"},{"name":"Status","value":"Failed"}]}]'
          actions: '[{ "targets": [{ "os": "default", "uri": "https://upgraded-garbanzo-6881fdcc.pages.github.io/${{ github.run_number }}" }], "@type": "OpenUri", "name": "Allure Report" }, { "targets": [{ "os": "default", "uri": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" }], "@type": "OpenUri", "name": "Go to workflow" }]'

      - name: 'Upload - Archive the allure results'
        uses: 'actions/upload-artifact@v2'
        if: always()
        with:
          name: allure-results
          path: ${{ github.event.inputs.module }}/build/allure-results

  # Allure Report Generation
  report:
    runs-on: ubuntu-latest
    needs: run_tests
    if: always()
    steps:
      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - uses: actions/download-artifact@v2
        with:
          name: allure-results
          path: build/allure-results

      - name: Allure Report
        uses: aiola-lab/allure-report-action@master
        if: always()
        with:
          allure_results: build/allure-results
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
          
#  # Notify to MS Teams
#  notify:
#    needs: run_tests
#    runs-on: ubuntu-latest
#    if: always()
#    steps:
#      - name: Send a message to Microsoft Teams
#        uses: aliencube/microsoft-teams-actions@v0.8.0
#        with:
#          webhook_uri: ${{ secrets.TEAMS_WEBHOOK }}
#          summary: MS Teams Notification
#          theme_color: $THEME_COLOR
#          sections: $SECTIONS
#          actions: $ACTIONS